{
    "branchPrefix": {
        "separator": "",
        "validator": "",
        "prefixes": {}
    },
    "commitPrefix": {
        "separator": " ",
        "validator": "^.{1,45}$",
        "prefixes": {}
    },
    "verboseMode": false,
    "aliases": [
        {
            "name": "test",
            "command": "npx rimrafx **/TestResults && npx rimrafx **/coveragereport && cls && dotnet test --collect:\"XPlat Code Coverage\" && reportgenerator -reports:.\\Tests\\TestResults\\**\\coverage.cobertura.xml -targetdir:\"coveragereport\" -reporttypes:Html && gittey commit; start ./coveragereport/index.htm",
            "description": "runs tests and commits if the tests succeed"
        },
        {
            "name": "push",
            "command": "gittey test && git push",
            "description": "runs tests commits and pushes if tests succeed"
        },
        {
            "name": "check",
            "command": "npx rimrafx **/TestResults && npx rimrafx **/coveragereport && cls && dotnet test --collect:\"XPlat Code Coverage\" && reportgenerator -reports:.\\Tests\\TestResults\\**\\coverage.cobertura.xml -targetdir:\"coveragereport\" -reporttypes:Html && start ./coveragereport/index.htm",
            "description": "runs tests but does not commit -- Try to avoid this one unless debugging"
        },
        {
            "name": "undo",
            "command": "cls && git reset . && git checkout . && git clean -f && gittey check",
            "description": "sets project state to that of the last committed state"
        },
        {
            "name": "shrink",
            "command": "npx rimrafx **/bin; npx rimrafx **/obj; npx rimrafx **/TestResults; npx rimrafx **/coveragereport",
            "description": "removes all untracked files and directories"
        },
        {
            "name": "docs",
            "command": "cls && booklisp ./documentation/_main.md ./readme.md",
            "description": "sets project state to that of the last committed state"
        },
        {
            "name": "setup",
            "command": "cls;dotnet build;dotnet tool install -g dotnet-reportgenerator-globaltool",
            "description": "sets the project up to be run"
        }
    ],
    "collaborators": []
}